@page "/student-profile-view/{Id:int}"
@using BlazorApp1.Model
@inject HttpClient Http
@inject NavigationManager Navigation

<h3>Student Profile View</h3>

@if (studentProfile == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <EditForm Model="studentProfile" OnValidSubmit="HandleValidSubmit">
        <DataAnnotationsValidator />
        <ValidationSummary />
        <div class="card p-4 mb-4 shadow-sm rounded-2xl">
            <h4 class="mb-4">Profile Details</h4>
            <div class="row g-3">
                <div class="col-md-3">
                    <label for="StudentName">Student Name</label>
                    <ValidationMessage For="@(() => studentProfile.StudentName)" />
                    <InputText id="StudentName" @bind-Value="studentProfile.StudentName" placeholder="Enter Student Name" class="form-control " />
                </div>
                <div class="col-md-3">
                    <label for="FacilitiesProvided">Facilities Provided</label>
                    <ValidationMessage For="@(() => studentProfile.FacilitiesProvided)" />
                    <InputText @bind-Value="studentProfile.FacilitiesProvided" placeholder="Enter Facilities Provided" class="form-control " />
                </div>
                <div class="col-md-3">
                    <label for="IsCWSN">Is CWSN</label>
                    <ValidationMessage For="@(() => studentProfile.IsCWSN)" />
                    <InputText @bind-Value="studentProfile.IsCWSN" placeholder="Enter CWSN Status" class="form-control " />
                </div>
                <div class="col-md-3">
                    <label for="IsSLD">Is SLD</label>
                    <ValidationMessage For="@(() => studentProfile.IsSLD)" />
                    <InputText @bind-Value="studentProfile.IsSLD" placeholder="Enter SLD Status" class="form-control " />
                </div>
            </div>

            <div class="row g-3">
                <div class="col-md-3">
                    <label for="SLDType">SLD Type</label>
                    <ValidationMessage For="@(() => studentProfile.SLDType)" />
                    <InputText @bind-Value="studentProfile.SLDType" placeholder="Enter SLD Type" class="form-control " />
                </div>
                <div class="col-md-3">
                    <label for="IsASD">Is ASD</label>
                    <ValidationMessage For="@(() => studentProfile.IsASD)" />
                    <InputText @bind-Value="studentProfile.IsASD" placeholder="Enter ASD Status" class="form-control " />
                </div>
                <div class="col-md-3">
                    <label for="IsADHD">Is ADHD</label>
                    <ValidationMessage For="@(() => studentProfile.IsADHD)" />
                    <InputText @bind-Value="studentProfile.IsADHD" placeholder="Enter ADHD Status" class="form-control " />
                </div>
                <div class="col-md-3">
                    <label for="IsGifted">Is Gifted</label>
                    <ValidationMessage For="@(() => studentProfile.IsGifted)" />
                    <InputText @bind-Value="studentProfile.IsGifted" placeholder="Enter Gifted Status" class="form-control " />
                </div>
            </div>

            <div class="row g-3">
                <div class="col-md-3">
                    <label for="IsInStateCompetition">In State Competition</label>
                    <ValidationMessage For="@(() => studentProfile.IsInStateCompetition)" />
                    <InputText @bind-Value="studentProfile.IsInStateCompetition" placeholder="Enter State Competition Status" class="form-control " />
                </div>
                <div class="col-md-3">
                    <label for="IsInNCC_NSS">In NCC/NSS</label>
                    <ValidationMessage For="@(() => studentProfile.IsInNCC_NSS)" />
                    <InputText @bind-Value="studentProfile.IsInNCC_NSS" placeholder="Enter NCC/NSS Status" class="form-control " />
                </div>
                <div class="col-md-3">
                    <label for="IsInUseInternet">Uses Internet</label>
                    <ValidationMessage For="@(() => studentProfile.IsInUseInternet)" />
                    <InputText @bind-Value="studentProfile.IsInUseInternet" placeholder="Enter Internet Usage Status" class="form-control " />
                </div>
                <div class="col-md-3">
                    <label for="Height">Height</label>
                    <ValidationMessage For="@(() => studentProfile.Height)" />
                    <InputText @bind-Value="studentProfile.Height" placeholder="Enter Height" class="form-control " />
                </div>
            </div>

            <div class="row g-3">
                <div class="col-md-3">
                    <label for="Weight">Weight</label>
                    <ValidationMessage For="@(() => studentProfile.Weight)" />
                    <InputText @bind-Value="studentProfile.Weight" placeholder="Enter Weight" class="form-control " />
                </div>
                <div class="col-md-3">
                    <label for="Residencetoschool">Residence to School Distance</label>
                    <ValidationMessage For="@(() => studentProfile.Residencetoschool)" />
                    <InputText @bind-Value="studentProfile.Residencetoschool" placeholder="Enter Residence to School Distance" class="form-control " />
                </div>
                <div class="col-md-3">
                    <label for="Educationinfamily">Education in Family</label>
                    <ValidationMessage For="@(() => studentProfile.Educationinfamily)" />
                    <InputText @bind-Value="studentProfile.Educationinfamily" placeholder="Enter Education in Family Status" class="form-control " />
                </div>
                <!-- Add more fields here if needed to complete the row -->
            </div>

        </div>

            <div class="mt-4 d-flex justify-content-between">
                <button type="submit" class="btn btn-primary">Save</button>
                <button type="button" class="btn btn-secondary" @onclick="() => EditProfile(studentProfile.Id)">Edit</button>
            </div>
       
    </EditForm>
}

@code {
    [Parameter] public int Id { get; set; }

    private StudentProfile? studentProfile;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            studentProfile = await Http.GetFromJsonAsync<StudentProfile>($"api/StudentProfile/get/{Id}");
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error loading student profile: {ex.Message}");
        }
    }

    private async Task HandleValidSubmit()
    {
        if (studentProfile == null) return;

        var response = await Http.PutAsJsonAsync($"api/StudentProfile/edit/{studentProfile.Id}", studentProfile);
        if (response.IsSuccessStatusCode)
        {
            Console.WriteLine("Student Profile updated successfully!");
            Navigation.NavigateTo("/student-profile-list");
        }
        else
        {
            Console.WriteLine("Failed to update Student Profile.");
        }
    }

    private void EditProfile(int id)
    {
        Navigation.NavigateTo($"/student-profile-edit/{id}");
    }
}
