@page "/student/{Action}/{Id:int?}"
@inject IStudentService StudentService
@inject NavigationManager Navigation

<h3 class="text-center text-primary">@(IsEdit ? "Edit Student" : "Add Student")</h3>

<EditForm Model="student" OnValidSubmit="SaveStudent">
    <DataAnnotationsValidator />

    <div class="form-group mb-3">
        <label>Roll Number:</label>
        <InputText class="form-control" @bind-Value="student.RollNumber" />
    </div>

    <div class="form-group mb-3">
        <label>Name:</label>
        <InputText class="form-control" @bind-Value="student.Name" />
    </div>

    <div class="form-group mb-3">
        <label>Gender:</label>
        <InputSelect class="form-control" @bind-Value="student.Gender">
            <option value="">Select Gender</option>
            <option value="Male">Male</option>
            <option value="Female">Female</option>
        </InputSelect>
    </div>

    <div class="form-group mb-3">
        <label>Date of Birth:</label>
        <InputDate class="form-control" @bind-Value="student.DateOfBirth" />
    </div>

    <div class="form-group mb-3">
        <label>Email:</label>
        <InputText class="form-control" @bind-Value="student.Email" />
    </div>

    <button type="submit" class="btn btn-success">💾 Save</button>
    <button type="button" class="btn btn-secondary ms-2" @onclick="Cancel">❌ Cancel</button>
</EditForm>

@code {
    private Student student = new();
    private bool IsEdit => Action == "edit";

    [Parameter] public string Action { get; set; }
    [Parameter] public int? Id { get; set; }

    protected override async Task OnInitializedAsync()
    {
        if (IsEdit && Id.HasValue)
        {
            student = await StudentService.GetStudentById(Id.Value);
        }
    }

    private async Task SaveStudent()
    {
        if (IsEdit)
            await StudentService.UpdateStudent(student);
        else
            await StudentService.AddStudent(student);

        Navigation.NavigateTo("/students");
    }

    private void Cancel() => Navigation.NavigateTo("/students");
}
